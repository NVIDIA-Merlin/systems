Search.setIndex({"docnames": ["README", "api", "generated/merlin.systems.dag.Ensemble", "generated/merlin.systems.dag.ops.fil.PredictForest", "generated/merlin.systems.dag.ops.implicit.PredictImplicit", "generated/merlin.systems.dag.ops.session_filter.FilterCandidates", "generated/merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling", "generated/merlin.systems.dag.ops.tensorflow.PredictTensorflow", "generated/merlin.systems.dag.ops.unroll_features.UnrollFeatures", "generated/merlin.systems.dag.ops.workflow.TransformWorkflow", "generated/merlin.systems.triton.convert_df_to_triton_input", "generated/merlin.systems.triton.convert_triton_output_to_df", "index"], "filenames": ["README.md", "api.rst", "generated/merlin.systems.dag.Ensemble.rst", "generated/merlin.systems.dag.ops.fil.PredictForest.rst", "generated/merlin.systems.dag.ops.implicit.PredictImplicit.rst", "generated/merlin.systems.dag.ops.session_filter.FilterCandidates.rst", "generated/merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling.rst", "generated/merlin.systems.dag.ops.tensorflow.PredictTensorflow.rst", "generated/merlin.systems.dag.ops.unroll_features.UnrollFeatures.rst", "generated/merlin.systems.dag.ops.workflow.TransformWorkflow.rst", "generated/merlin.systems.triton.convert_df_to_triton_input.rst", "generated/merlin.systems.triton.convert_triton_output_to_df.rst", "index.rst"], "titles": ["Merlin Systems", "API Documentation", "merlin.systems.dag.Ensemble", "merlin.systems.dag.ops.fil.PredictForest", "merlin.systems.dag.ops.implicit.PredictImplicit", "merlin.systems.dag.ops.session_filter.FilterCandidates", "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling", "merlin.systems.dag.ops.tensorflow.PredictTensorflow", "merlin.systems.dag.ops.unroll_features.UnrollFeatures", "merlin.systems.dag.ops.workflow.TransformWorkflow", "merlin.systems.triton.convert_df_to_triton_input", "merlin.systems.triton.convert_triton_output_to_df", "Merlin Systems"], "terms": {"provid": [0, 12], "tool": 0, "combin": 0, "model": [0, 2, 3, 4, 7, 9], "other": 0, "element": [0, 5], "product": 0, "like": 0, "featur": [0, 7, 8, 9], "store": 0, "nearest": 0, "neighbor": 0, "search": 0, "explor": 0, "strategi": 0, "end": 0, "can": [0, 7, 9], "serv": [0, 12], "triton": [0, 2, 3], "infer": [0, 2, 3, 4, 6, 7], "server": [0, 2], "oper": [0, 2, 3, 4, 5, 6, 7, 8, 9], "dag": 0, "api": 0, "same": 0, "nvtabular": [0, 9], "engin": [0, 9], "creat": [0, 6, 9], "ensembl": [0, 9], "To": [0, 12], "workflow": 0, "tensorflow": 0, "an": [0, 2, 4], "import": 0, "tf": 0, "op": [0, 2], "predicttensorflow": 0, "transformworkflow": 0, "load": [0, 2, 7], "save": [0, 2], "nvtabular_workflow_path": 0, "kera": 0, "load_model": 0, "tf_model_path": 0, "remov": 0, "target": [0, 5, 8, 9], "label": [0, 2, 9], "column": [0, 2, 3, 4, 5, 6, 8, 9, 11], "process": 0, "workflowk": 0, "remove_input": 0, "target_column": 0, "defin": 0, "input_schema": [0, 2, 3, 4, 5, 6, 7, 8, 9], "column_nam": 0, "export": [0, 2], "artifact": 0, "disk": [0, 2], "export_path": [0, 2], "after": 0, "you": [0, 6], "your": 0, "refer": 0, "directori": [0, 2], "instanc": [0, 3, 4], "host": 0, "tritonserv": [0, 2, 9], "repositori": [0, 12], "exampl": 0, "notebook": 0, "demonstr": 0, "how": 0, "train": [0, 3], "evalu": 0, "rank": 0, "For": 0, "xgboost": [0, 3], "implicit": 0, "visit": 0, "also": 0, "more": [0, 5, 12], "complex": 0, "integr": 0, "multipl": [0, 2], "extern": 0, "retrieval_model": 0, "retrieval_model_path": 0, "ranking_model": 0, "ranking_model_path": 0, "feature_stor": 0, "feast": 0, "featurestor": 0, "feast_repo_path": 0, "field": 0, "expect": [0, 3, 4], "request": [0, 2, 10, 11], "request_schema": 0, "schema": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10], "columnschema": 0, "user_id": 0, "dtype": [0, 10], "np": 0, "int32": [0, 10], "fetch": 0, "user": [0, 8], "them": 0, "comput": [0, 5], "vector": 0, "retriev": 0, "find": 0, "candid": 0, "item": [0, 4, 8], "closest": 0, "user_featur": 0, "queryfeast": 0, "from_feature_view": 0, "view": 0, "queryfaiss": 0, "faiss_index_path": 0, "topk": [0, 6], "100": 0, "filter": [0, 5], "out": [0, 2, 5], "have": 0, "alreadi": 0, "interact": 0, "current": 0, "session": 0, "rest": 0, "candidate_id": 0, "filtercandid": 0, "filter_out": [0, 5], "movie_id": 0, "item_featur": 0, "movie_featur": 0, "filtered_id": 0, "join": [0, 8], "predict": [0, 4, 6, 7], "relev": 0, "score": 0, "combined_featur": 0, "unrollfeatur": 0, "unrolled_prefix": [0, 8], "sort": [0, 6], "some": 0, "random": [0, 3], "order": [0, 6], "softmaxsampl": 0, "relevance_col": [0, 6], "output": [0, 3, 4, 5, 6, 7, 9, 11], "10": [0, 4, 6], "temperatur": [0, 6], "20": [0, 6], "0": [0, 6], "deploi": 0, "multi": 0, "recsi": 0, "requir": 0, "The": [0, 2, 3, 5, 6, 9, 10, 11, 12], "simplest": 0, "setup": 0, "i": [0, 2, 5, 12], "contain": 0, "which": [0, 6], "ha": [0, 5], "both": [0, 3], "pre": 0, "clone": 0, "github": [0, 12], "py": 0, "git": 0, "http": [0, 12], "com": [0, 12], "nvidia": [0, 12], "cd": 0, "python": [0, 3], "develop": [0, 12], "ar": 0, "avail": [0, 12], "gpu": 0, "cloud": 0, "ngc": 0, "catalog": 0, "follow": 0, "tabl": 0, "list": [0, 2, 9, 10, 11], "includ": [0, 11], "name": [0, 5, 9, 11], "locat": 0, "function": [0, 5], "hugectr": 0, "org": 0, "team": 0, "framework": 0, "select": 0, "onli": 0, "If": 0, "want": 0, "add": 0, "acceler": 0, "first": 0, "need": [0, 7], "toolkit": 0, "link": 0, "referenc": 0, "abov": 0, "obtain": 0, "inform": [0, 12], "about": [0, 12], "launch": 0, "report": 0, "bug": 0, "get": 0, "help": [0, 8], "pleas": 0, "open": 0, "issu": 0, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "label_column": [2, 9], "none": [2, 3, 4, 5, 6, 7, 8, 9], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "base": [2, 3, 4, 5, 6, 7, 8, 9], "object": [2, 5, 7], "repres": [2, 3, 4, 5, 9], "entir": 2, "consist": 2, "run": [2, 3, 4, 7, 9], "sequenti": 2, "initi": 2, "__init__": [2, 3, 4, 5, 6, 7, 8, 9], "construct": 2, "paramet": [2, 3, 4, 5, 6, 7, 9, 10, 11], "inferencenod": 2, "node": [2, 5], "chain": 2, "input": [2, 3, 4, 5, 6, 7, 9, 10], "data": [2, 5, 9, 10], "str": [2, 3, 4, 5, 9, 10, 11], "option": [2, 3, 4, 5, 6, 7, 8, 9, 10], "string": [2, 6, 7, 9], "default": [2, 5, 6, 7, 9, 10], "method": [2, 3, 4, 5, 6, 7, 8, 9], "attribut": [2, 3, 4, 5, 6, 7, 8, 9], "properti": [2, 5, 6, 7, 8, 9], "output_schema": [2, 5], "transform": [2, 3, 4, 5, 6, 7, 8, 9], "runtim": 2, "deleg": 2, "executor": 2, "necessari": [2, 5], "graph": [2, 5], "thi": [2, 3, 4, 5, 6, 7, 8, 9], "travers": 2, "each": 2, "mutat": 2, "accord": 2, "datafram": [2, 3, 4, 5, 6, 10, 11], "tensort": [2, 3, 4, 5], "us": [2, 3, 4, 5, 6, 7, 10], "return": [2, 3, 4, 5, 7, 9, 10, 11], "type": [2, 3, 4, 5, 7, 9, 10, 11], "path": [2, 7], "classmethod": [2, 7], "up": 2, "from": 2, "kwarg": [2, 4, 7], "write": 2, "configur": 2, "design": 2, "backend": 3, "fil_param": 3, "forest": 3, "work": [3, 4], "gradient": 3, "boost": 3, "decis": 3, "tree": 3, "gbdt": 3, "rf": 3, "while": 3, "algorithm": 3, "differ": 3, "wai": 3, "thei": 3, "produc": 3, "librari": [3, 12], "instanti": [3, 4, 5, 7], "A": [3, 4, 5, 10, 11], "support": 3, "lightgbm": 3, "scikit": 3, "learn": [3, 12], "when": [3, 8], "pass": [3, 5], "compute_output_schema": [3, 4, 5, 6, 7, 8, 9], "col_selector": [3, 4, 5, 6, 7, 8, 9], "columnselector": [3, 4, 5, 6, 7, 8, 9], "prev_output_schema": [3, 4, 5, 6, 7, 8, 9], "compute_input_schema": [3, 4, 5, 6, 7], "root_schema": [3, 4, 5, 6, 7], "parents_schema": [3, 4, 5, 6, 7], "deps_schema": [3, 4, 5, 6, 7], "selector": [3, 4, 5, 6, 7], "appli": [3, 4, 6], "set": [3, 4, 6, 8, 10], "df": [3, 4, 5], "panda": [3, 4], "cudf": [3, 4], "num_to_recommend": 4, "int": [4, 6, 9], "number": [4, 6], "load_artifact": 4, "artifact_path": 4, "save_artifact": 4, "input_col": 5, "take": [5, 8, 9], "suppli": [5, 7], "criteria": 5, "_summary_": 5, "param": 5, "valu": [5, 6, 9, 10], "depend": [5, 6, 8], "given": [5, 6], "root": 5, "parent": 5, "all": [5, 6], "ancestor": 5, "subset": 5, "": [5, 6], "correct": 5, "represent": 5, "incom": 5, "complet": 5, "its": 5, "rais": 5, "valueerror": 5, "cannot": 5, "receiv": [5, 6], "than": 5, "one": 5, "previou": 5, "validate_schema": 5, "strict_dtyp": 5, "fals": 5, "logic": 5, "tensor": 5, "dictionari": [5, 9], "manipul": 5, "_input_col": 6, "id": 6, "descend": 6, "pipelin": 6, "judg": 6, "float": 6, "effect": 6, "weight": 6, "max": [6, 9], "result": 6, "wish": 6, "_type_": 6, "whose": 6, "describ": 6, "model_or_path": 7, "custom_object": 7, "dict": [7, 9], "ani": 7, "custom": 7, "unus": [7, 9], "columunselector": [7, 9], "from_path": 7, "dure": [7, 9], "creation": 7, "supported_format": [7, 8, 9], "dataformat": [7, 8, 9], "item_id_col": 8, "unroll_col": 8, "unrol": 8, "broadcast": 8, "seri": 8, "sparse_max": 9, "max_batch_s": 9, "cat": 9, "cont": 9, "turn": 9, "so": 9, "we": 9, "execut": 9, "kei": 9, "val": 9, "pair": 9, "sparsiti": 9, "maximum": 9, "batch": [9, 10, 12], "size": 9, "identifi": 9, "categor": 9, "continu": 9, "nvt_model_nam": 9, "set_nvt_model_nam": 9, "input_class": 10, "tritoncli": 10, "grpc": 10, "_infer_input": 10, "inferinput": 10, "convert": [10, 11], "itself": [10, 11], "grpcclient": 10, "length": 10, "offset": 10, "respons": 11, "facil": 12, "simplifi": 12, "build": 12, "recommend": 12, "start": 12, "introduct": 12, "overarch": 12, "project": 12, "bring": 12, "togeth": 12, "see": 12, "document": 12, "websit": 12, "our": 12}, "objects": {"merlin.systems.dag": [[2, 0, 1, "", "Ensemble"]], "merlin.systems.dag.Ensemble": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "export"], [2, 2, 1, "", "input_schema"], [2, 1, 1, "", "load"], [2, 2, 1, "", "output_schema"], [2, 1, 1, "", "save"], [2, 1, 1, "", "transform"]], "merlin.systems.dag.ops.fil": [[3, 0, 1, "", "PredictForest"]], "merlin.systems.dag.ops.fil.PredictForest": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "compute_input_schema"], [3, 1, 1, "", "compute_output_schema"], [3, 1, 1, "", "transform"]], "merlin.systems.dag.ops.implicit": [[4, 0, 1, "", "PredictImplicit"]], "merlin.systems.dag.ops.implicit.PredictImplicit": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "compute_input_schema"], [4, 1, 1, "", "compute_output_schema"], [4, 1, 1, "", "load_artifacts"], [4, 1, 1, "", "save_artifacts"], [4, 1, 1, "", "transform"]], "merlin.systems.dag.ops.session_filter": [[5, 0, 1, "", "FilterCandidates"]], "merlin.systems.dag.ops.session_filter.FilterCandidates": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "compute_input_schema"], [5, 1, 1, "", "compute_output_schema"], [5, 2, 1, "", "dependencies"], [5, 1, 1, "", "transform"], [5, 1, 1, "", "validate_schemas"]], "merlin.systems.dag.ops.softmax_sampling": [[6, 0, 1, "", "SoftmaxSampling"]], "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "compute_input_schema"], [6, 1, 1, "", "compute_output_schema"], [6, 2, 1, "", "dependencies"], [6, 1, 1, "", "transform"]], "merlin.systems.dag.ops.tensorflow": [[7, 0, 1, "", "PredictTensorflow"]], "merlin.systems.dag.ops.tensorflow.PredictTensorflow": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "compute_input_schema"], [7, 1, 1, "", "compute_output_schema"], [7, 1, 1, "", "from_path"], [7, 2, 1, "", "supported_formats"], [7, 1, 1, "", "transform"]], "merlin.systems.dag.ops.unroll_features": [[8, 0, 1, "", "UnrollFeatures"]], "merlin.systems.dag.ops.unroll_features.UnrollFeatures": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "compute_output_schema"], [8, 2, 1, "", "dependencies"], [8, 2, 1, "", "supported_formats"], [8, 1, 1, "", "transform"]], "merlin.systems.dag.ops.workflow": [[9, 0, 1, "", "TransformWorkflow"]], "merlin.systems.dag.ops.workflow.TransformWorkflow": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "compute_output_schema"], [9, 2, 1, "", "nvt_model_name"], [9, 1, 1, "", "set_nvt_model_name"], [9, 2, 1, "", "supported_formats"], [9, 1, 1, "", "transform"]], "merlin.systems.triton": [[10, 3, 1, "", "convert_df_to_triton_input"], [11, 3, 1, "", "convert_triton_output_to_df"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "titleterms": {"merlin": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "system": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "quickstart": 0, "build": 0, "four": 0, "stage": 0, "recommend": 0, "pipelin": 0, "instal": 0, "us": 0, "pip": 0, "from": 0, "sourc": 0, "run": 0, "docker": 0, "feedback": 0, "support": 0, "api": 1, "document": 1, "ensembl": [1, 2], "graph": 1, "constructor": 1, "oper": 1, "convers": 1, "function": 1, "triton": [1, 10, 11], "infer": 1, "server": 1, "dag": [2, 3, 4, 5, 6, 7, 8, 9], "op": [3, 4, 5, 6, 7, 8, 9], "fil": 3, "predictforest": 3, "implicit": 4, "predictimplicit": 4, "session_filt": 5, "filtercandid": 5, "softmax_sampl": 6, "softmaxsampl": 6, "tensorflow": 7, "predicttensorflow": 7, "unroll_featur": 8, "unrollfeatur": 8, "workflow": 9, "transformworkflow": 9, "convert_df_to_triton_input": 10, "convert_triton_output_to_df": 11, "relat": 12, "resourc": 12, "index": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Merlin Systems": [[0, "merlin-systems"], [12, "merlin-systems"]], "Quickstart": [[0, "quickstart"]], "Building a Four-Stage Recommender Pipeline": [[0, "building-a-four-stage-recommender-pipeline"]], "Installation": [[0, "installation"]], "Installing Merlin Systems Using Pip": [[0, "installing-merlin-systems-using-pip"]], "Installing Merlin Systems from Source": [[0, "installing-merlin-systems-from-source"]], "Running Merlin Systems from Docker": [[0, "running-merlin-systems-from-docker"]], "Feedback and Support": [[0, "feedback-and-support"]], "API Documentation": [[1, "api-documentation"]], "Ensemble Graph Constructors": [[1, "ensemble-graph-constructors"]], "Ensemble Operator Constructors": [[1, "ensemble-operator-constructors"]], "Conversion Functions for Triton Inference Server": [[1, "conversion-functions-for-triton-inference-server"]], "merlin.systems.dag.Ensemble": [[2, "merlin-systems-dag-ensemble"]], "merlin.systems.dag.ops.fil.PredictForest": [[3, "merlin-systems-dag-ops-fil-predictforest"]], "merlin.systems.dag.ops.implicit.PredictImplicit": [[4, "merlin-systems-dag-ops-implicit-predictimplicit"]], "merlin.systems.dag.ops.session_filter.FilterCandidates": [[5, "merlin-systems-dag-ops-session-filter-filtercandidates"]], "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling": [[6, "merlin-systems-dag-ops-softmax-sampling-softmaxsampling"]], "merlin.systems.dag.ops.tensorflow.PredictTensorflow": [[7, "merlin-systems-dag-ops-tensorflow-predicttensorflow"]], "merlin.systems.dag.ops.unroll_features.UnrollFeatures": [[8, "merlin-systems-dag-ops-unroll-features-unrollfeatures"]], "merlin.systems.dag.ops.workflow.TransformWorkflow": [[9, "merlin-systems-dag-ops-workflow-transformworkflow"]], "merlin.systems.triton.convert_df_to_triton_input": [[10, "merlin-systems-triton-convert-df-to-triton-input"]], "merlin.systems.triton.convert_triton_output_to_df": [[11, "merlin-systems-triton-convert-triton-output-to-df"]], "Related Resources": [[12, "related-resources"]], "Index": [[12, "index"]]}, "indexentries": {"ensemble (class in merlin.systems.dag)": [[2, "merlin.systems.dag.Ensemble"]], "__init__() (merlin.systems.dag.ensemble method)": [[2, "merlin.systems.dag.Ensemble.__init__"]], "export() (merlin.systems.dag.ensemble method)": [[2, "merlin.systems.dag.Ensemble.export"]], "input_schema (merlin.systems.dag.ensemble property)": [[2, "merlin.systems.dag.Ensemble.input_schema"]], "load() (merlin.systems.dag.ensemble class method)": [[2, "merlin.systems.dag.Ensemble.load"]], "output_schema (merlin.systems.dag.ensemble property)": [[2, "merlin.systems.dag.Ensemble.output_schema"]], "save() (merlin.systems.dag.ensemble method)": [[2, "merlin.systems.dag.Ensemble.save"]], "transform() (merlin.systems.dag.ensemble method)": [[2, "merlin.systems.dag.Ensemble.transform"]], "predictforest (class in merlin.systems.dag.ops.fil)": [[3, "merlin.systems.dag.ops.fil.PredictForest"]], "__init__() (merlin.systems.dag.ops.fil.predictforest method)": [[3, "merlin.systems.dag.ops.fil.PredictForest.__init__"]], "compute_input_schema() (merlin.systems.dag.ops.fil.predictforest method)": [[3, "merlin.systems.dag.ops.fil.PredictForest.compute_input_schema"]], "compute_output_schema() (merlin.systems.dag.ops.fil.predictforest method)": [[3, "merlin.systems.dag.ops.fil.PredictForest.compute_output_schema"]], "transform() (merlin.systems.dag.ops.fil.predictforest method)": [[3, "merlin.systems.dag.ops.fil.PredictForest.transform"]], "predictimplicit (class in merlin.systems.dag.ops.implicit)": [[4, "merlin.systems.dag.ops.implicit.PredictImplicit"]], "__init__() (merlin.systems.dag.ops.implicit.predictimplicit method)": [[4, "merlin.systems.dag.ops.implicit.PredictImplicit.__init__"]], "compute_input_schema() (merlin.systems.dag.ops.implicit.predictimplicit method)": [[4, "merlin.systems.dag.ops.implicit.PredictImplicit.compute_input_schema"]], "compute_output_schema() (merlin.systems.dag.ops.implicit.predictimplicit method)": [[4, "merlin.systems.dag.ops.implicit.PredictImplicit.compute_output_schema"]], "load_artifacts() (merlin.systems.dag.ops.implicit.predictimplicit method)": [[4, "merlin.systems.dag.ops.implicit.PredictImplicit.load_artifacts"]], "save_artifacts() (merlin.systems.dag.ops.implicit.predictimplicit method)": [[4, "merlin.systems.dag.ops.implicit.PredictImplicit.save_artifacts"]], "transform() (merlin.systems.dag.ops.implicit.predictimplicit method)": [[4, "merlin.systems.dag.ops.implicit.PredictImplicit.transform"]], "filtercandidates (class in merlin.systems.dag.ops.session_filter)": [[5, "merlin.systems.dag.ops.session_filter.FilterCandidates"]], "__init__() (merlin.systems.dag.ops.session_filter.filtercandidates method)": [[5, "merlin.systems.dag.ops.session_filter.FilterCandidates.__init__"]], "compute_input_schema() (merlin.systems.dag.ops.session_filter.filtercandidates method)": [[5, "merlin.systems.dag.ops.session_filter.FilterCandidates.compute_input_schema"]], "compute_output_schema() (merlin.systems.dag.ops.session_filter.filtercandidates method)": [[5, "merlin.systems.dag.ops.session_filter.FilterCandidates.compute_output_schema"]], "dependencies (merlin.systems.dag.ops.session_filter.filtercandidates property)": [[5, "merlin.systems.dag.ops.session_filter.FilterCandidates.dependencies"]], "transform() (merlin.systems.dag.ops.session_filter.filtercandidates method)": [[5, "merlin.systems.dag.ops.session_filter.FilterCandidates.transform"]], "validate_schemas() (merlin.systems.dag.ops.session_filter.filtercandidates method)": [[5, "merlin.systems.dag.ops.session_filter.FilterCandidates.validate_schemas"]], "softmaxsampling (class in merlin.systems.dag.ops.softmax_sampling)": [[6, "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling"]], "__init__() (merlin.systems.dag.ops.softmax_sampling.softmaxsampling method)": [[6, "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling.__init__"]], "compute_input_schema() (merlin.systems.dag.ops.softmax_sampling.softmaxsampling method)": [[6, "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling.compute_input_schema"]], "compute_output_schema() (merlin.systems.dag.ops.softmax_sampling.softmaxsampling method)": [[6, "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling.compute_output_schema"]], "dependencies (merlin.systems.dag.ops.softmax_sampling.softmaxsampling property)": [[6, "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling.dependencies"]], "transform() (merlin.systems.dag.ops.softmax_sampling.softmaxsampling method)": [[6, "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling.transform"]], "predicttensorflow (class in merlin.systems.dag.ops.tensorflow)": [[7, "merlin.systems.dag.ops.tensorflow.PredictTensorflow"]], "__init__() (merlin.systems.dag.ops.tensorflow.predicttensorflow method)": [[7, "merlin.systems.dag.ops.tensorflow.PredictTensorflow.__init__"]], "compute_input_schema() (merlin.systems.dag.ops.tensorflow.predicttensorflow method)": [[7, "merlin.systems.dag.ops.tensorflow.PredictTensorflow.compute_input_schema"]], "compute_output_schema() (merlin.systems.dag.ops.tensorflow.predicttensorflow method)": [[7, "merlin.systems.dag.ops.tensorflow.PredictTensorflow.compute_output_schema"]], "from_path() (merlin.systems.dag.ops.tensorflow.predicttensorflow class method)": [[7, "merlin.systems.dag.ops.tensorflow.PredictTensorflow.from_path"]], "supported_formats (merlin.systems.dag.ops.tensorflow.predicttensorflow property)": [[7, "merlin.systems.dag.ops.tensorflow.PredictTensorflow.supported_formats"]], "transform() (merlin.systems.dag.ops.tensorflow.predicttensorflow method)": [[7, "merlin.systems.dag.ops.tensorflow.PredictTensorflow.transform"]], "unrollfeatures (class in merlin.systems.dag.ops.unroll_features)": [[8, "merlin.systems.dag.ops.unroll_features.UnrollFeatures"]], "__init__() (merlin.systems.dag.ops.unroll_features.unrollfeatures method)": [[8, "merlin.systems.dag.ops.unroll_features.UnrollFeatures.__init__"]], "compute_output_schema() (merlin.systems.dag.ops.unroll_features.unrollfeatures method)": [[8, "merlin.systems.dag.ops.unroll_features.UnrollFeatures.compute_output_schema"]], "dependencies (merlin.systems.dag.ops.unroll_features.unrollfeatures property)": [[8, "merlin.systems.dag.ops.unroll_features.UnrollFeatures.dependencies"]], "supported_formats (merlin.systems.dag.ops.unroll_features.unrollfeatures property)": [[8, "merlin.systems.dag.ops.unroll_features.UnrollFeatures.supported_formats"]], "transform() (merlin.systems.dag.ops.unroll_features.unrollfeatures method)": [[8, "merlin.systems.dag.ops.unroll_features.UnrollFeatures.transform"]], "transformworkflow (class in merlin.systems.dag.ops.workflow)": [[9, "merlin.systems.dag.ops.workflow.TransformWorkflow"]], "__init__() (merlin.systems.dag.ops.workflow.transformworkflow method)": [[9, "merlin.systems.dag.ops.workflow.TransformWorkflow.__init__"]], "compute_output_schema() (merlin.systems.dag.ops.workflow.transformworkflow method)": [[9, "merlin.systems.dag.ops.workflow.TransformWorkflow.compute_output_schema"]], "nvt_model_name (merlin.systems.dag.ops.workflow.transformworkflow property)": [[9, "merlin.systems.dag.ops.workflow.TransformWorkflow.nvt_model_name"]], "set_nvt_model_name() (merlin.systems.dag.ops.workflow.transformworkflow method)": [[9, "merlin.systems.dag.ops.workflow.TransformWorkflow.set_nvt_model_name"]], "supported_formats (merlin.systems.dag.ops.workflow.transformworkflow property)": [[9, "merlin.systems.dag.ops.workflow.TransformWorkflow.supported_formats"]], "transform() (merlin.systems.dag.ops.workflow.transformworkflow method)": [[9, "merlin.systems.dag.ops.workflow.TransformWorkflow.transform"]], "convert_df_to_triton_input() (in module merlin.systems.triton)": [[10, "merlin.systems.triton.convert_df_to_triton_input"]], "convert_triton_output_to_df() (in module merlin.systems.triton)": [[11, "merlin.systems.triton.convert_triton_output_to_df"]]}})