Search.setIndex({"docnames": ["README", "api", "examples/Serving-An-Implicit-Model-With-Merlin-Systems", "examples/Serving-An-XGboost-Model-With-Merlin-Systems", "examples/Serving-Ranking-Models-With-Merlin-Systems", "examples/index", "generated/merlin.systems.dag.Ensemble", "generated/merlin.systems.dag.ops.fil.PredictForest", "generated/merlin.systems.dag.ops.implicit.PredictImplicit", "generated/merlin.systems.dag.ops.session_filter.FilterCandidates", "generated/merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling", "generated/merlin.systems.dag.ops.tensorflow.PredictTensorflow", "generated/merlin.systems.dag.ops.unroll_features.UnrollFeatures", "generated/merlin.systems.dag.ops.workflow.TransformWorkflow", "generated/merlin.systems.triton.convert_df_to_triton_input", "generated/merlin.systems.triton.convert_triton_output_to_df", "index"], "filenames": ["README.md", "api.rst", "examples/Serving-An-Implicit-Model-With-Merlin-Systems.ipynb", "examples/Serving-An-XGboost-Model-With-Merlin-Systems.ipynb", "examples/Serving-Ranking-Models-With-Merlin-Systems.ipynb", "examples/index.md", "generated/merlin.systems.dag.Ensemble.rst", "generated/merlin.systems.dag.ops.fil.PredictForest.rst", "generated/merlin.systems.dag.ops.implicit.PredictImplicit.rst", "generated/merlin.systems.dag.ops.session_filter.FilterCandidates.rst", "generated/merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling.rst", "generated/merlin.systems.dag.ops.tensorflow.PredictTensorflow.rst", "generated/merlin.systems.dag.ops.unroll_features.UnrollFeatures.rst", "generated/merlin.systems.dag.ops.workflow.TransformWorkflow.rst", "generated/merlin.systems.triton.convert_df_to_triton_input.rst", "generated/merlin.systems.triton.convert_triton_output_to_df.rst", "index.rst"], "titles": ["Merlin Systems", "API Documentation", "Serving an Implicit Model with Merlin Systems", "Serving an XGBoost Model with Merlin Systems", "Serving Ranking Models With Merlin Systems", "Merlin Systems Example Notebook", "merlin.systems.dag.Ensemble", "merlin.systems.dag.ops.fil.PredictForest", "merlin.systems.dag.ops.implicit.PredictImplicit", "merlin.systems.dag.ops.session_filter.FilterCandidates", "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling", "merlin.systems.dag.ops.tensorflow.PredictTensorflow", "merlin.systems.dag.ops.unroll_features.UnrollFeatures", "merlin.systems.dag.ops.workflow.TransformWorkflow", "merlin.systems.triton.convert_df_to_triton_input", "merlin.systems.triton.convert_triton_output_to_df", "Merlin Systems"], "terms": {"provid": [0, 5, 16], "tool": 0, "combin": 0, "model": [0, 5, 6, 7, 8, 11, 13], "other": [0, 4], "element": [0, 9], "product": [0, 2, 3, 4, 5], "like": [0, 2, 3, 4], "featur": [0, 2, 3, 4, 11, 12, 13], "store": [0, 4, 5], "nearest": 0, "neighbor": 0, "search": 0, "explor": 0, "strategi": 0, "end": [0, 2, 3, 4], "can": [0, 2, 3, 4, 5, 11, 13], "serv": [0, 16], "triton": [0, 5, 6, 7], "infer": [0, 5, 6, 7, 8, 10, 11], "server": [0, 5, 6], "oper": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "dag": [0, 2, 3, 4], "api": [0, 2, 3, 4], "same": [0, 2, 3, 4], "nvtabular": [0, 2, 3, 5, 13], "engin": [0, 13], "creat": [0, 5, 10, 13], "ensembl": [0, 13], "To": [0, 4, 5, 16], "workflow": [0, 2, 3, 5], "tensorflow": [0, 2, 3, 5], "an": [0, 6, 8], "import": [0, 2, 3, 4], "tf": [0, 4], "predicttensorflow": [0, 4], "transformworkflow": [0, 2, 3, 4], "load": [0, 2, 3, 6, 11], "save": [0, 4, 5, 6], "nvtabular_workflow_path": 0, "kera": [0, 4], "load_model": [0, 4], "tf_model_path": [0, 4], "remov": [0, 4], "target": [0, 3, 4, 9, 12, 13], "label": [0, 4, 6, 13], "column": [0, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15], "process": [0, 2, 3, 5], "workflowk": 0, "remove_input": [0, 2, 3, 4], "target_column": 0, "defin": [0, 2, 3, 4], "input_schema": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "column_nam": [0, 2, 3, 4], "export": [0, 2, 3, 6], "artifact": 0, "disk": [0, 2, 3, 4, 6], "export_path": [0, 2, 3, 4, 6], "after": [0, 2, 3, 4, 5], "you": [0, 2, 3, 4, 5, 10], "your": [0, 2, 3, 4, 5], "refer": 0, "directori": [0, 3, 4, 5, 6], "instanc": [0, 4, 7, 8], "host": [0, 3, 5], "tritonserv": [0, 2, 3, 4, 6, 13], "repositori": [0, 2, 3, 4, 16], "exampl": [0, 2, 3, 4], "notebook": [0, 2, 3, 4], "rank": [0, 3, 5], "The": [0, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16], "show": [0, 2, 3, 4, 5], "how": [0, 2, 3, 4, 5], "deploi": [0, 2, 3, 4, 5], "demonstr": [0, 2, 3, 4, 5], "send": [0, 2, 3, 4], "request": [0, 2, 3, 4, 6, 14, 15], "also": [0, 4], "more": [0, 2, 3, 4, 5, 9, 16], "complex": 0, "integr": 0, "multipl": [0, 6], "extern": 0, "retrieval_model": 0, "retrieval_model_path": 0, "ranking_model": 0, "ranking_model_path": 0, "feature_stor": 0, "feast": 0, "featurestor": 0, "feast_repo_path": 0, "field": [0, 2, 3], "expect": [0, 2, 3, 4, 7, 8], "request_schema": 0, "schema": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14], "columnschema": [0, 4], "user_id": [0, 2, 4], "dtype": [0, 3, 4, 14], "np": [0, 2, 3, 4], "int32": [0, 3, 14], "fetch": 0, "user": [0, 2, 3, 4, 12], "them": [0, 4], "comput": [0, 2, 3, 4, 9], "vector": 0, "retriev": 0, "find": [0, 5], "candid": 0, "item": [0, 2, 3, 4, 8, 12], "closest": 0, "user_featur": 0, "queryfeast": 0, "from_feature_view": 0, "view": [0, 4, 5], "queryfaiss": 0, "faiss_index_path": 0, "topk": [0, 10], "100": [0, 2, 3], "filter": [0, 9], "out": [0, 4, 5, 6, 9], "have": [0, 2, 3, 4], "alreadi": [0, 3, 4, 5], "interact": 0, "current": [0, 4], "session": 0, "rest": [0, 4], "candidate_id": 0, "filtercandid": 0, "filter_out": [0, 9], "movie_id": 0, "item_featur": 0, "movie_featur": 0, "filtered_id": 0, "join": [0, 4, 12], "predict": [0, 2, 3, 4, 8, 10, 11], "relev": 0, "score": 0, "combined_featur": 0, "unrollfeatur": 0, "unrolled_prefix": [0, 12], "sort": [0, 4, 10], "some": [0, 2, 3, 4], "random": [0, 7], "order": [0, 2, 3, 4, 10], "softmaxsampl": 0, "relevance_col": [0, 10], "output": [0, 2, 3, 4, 7, 8, 9, 10, 11, 13, 15], "10": [0, 2, 3, 4, 8, 10], "temperatur": [0, 10], "20": [0, 3, 10], "0": [0, 2, 3, 4, 5, 10], "requir": [0, 2, 3], "simplest": 0, "setup": 0, "i": [0, 2, 3, 4, 5, 6, 9, 16], "contain": [0, 2, 3, 4, 5], "which": [0, 4, 10], "ha": [0, 2, 3, 4, 9], "both": [0, 4, 7], "pre": [0, 4], "clone": 0, "github": [0, 16], "py": [0, 2, 3, 4], "git": 0, "http": [0, 2, 3, 4, 5, 16], "com": [0, 16], "nvidia": [0, 2, 3, 4, 5, 16], "cd": 0, "python": [0, 4, 7], "develop": [0, 2, 3, 4, 16], "ar": [0, 2, 3, 4, 5], "avail": [0, 2, 3, 4, 5, 16], "gpu": [0, 4, 5], "cloud": [0, 5], "ngc": 0, "catalog": 0, "follow": [0, 2, 3, 4, 5], "tabl": 0, "list": [0, 4, 6, 13, 14, 15], "includ": [0, 2, 3, 4, 15], "name": [0, 2, 3, 4, 9, 13, 15], "locat": [0, 4], "function": [0, 4, 9], "hugectr": 0, "org": [0, 2, 3, 4], "team": 0, "framework": [0, 2, 3, 4], "select": 0, "onli": [0, 2, 3, 4], "If": [0, 2, 3, 4, 5], "want": [0, 2, 3], "add": [0, 4], "acceler": [0, 2, 3, 4], "first": [0, 4], "need": [0, 2, 4, 11], "toolkit": 0, "link": 0, "referenc": 0, "abov": 0, "obtain": [0, 2, 3, 4], "inform": [0, 2, 3, 4, 5, 16], "about": [0, 2, 3, 16], "launch": 0, "report": 0, "bug": [0, 2, 3], "get": [0, 2, 3, 4], "help": [0, 4, 12], "pleas": [0, 2, 3, 4], "open": [0, 2, 3, 4, 5], "issu": 0, "copyright": [2, 3, 4], "2022": [2, 3, 4], "corpor": [2, 3, 4], "all": [2, 3, 4, 5, 9, 10], "right": [2, 3, 4], "reserv": [2, 3, 4], "licens": [2, 3, 4], "under": [2, 3, 4], "apach": [2, 3, 4], "version": [2, 3, 4, 5], "2": [2, 3, 4], "mai": [2, 3, 4], "us": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14], "thi": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "file": [2, 3, 4, 5], "except": [2, 3, 4], "complianc": [2, 3, 4], "copi": [2, 3, 4, 5], "www": [2, 3, 4], "unless": [2, 3, 4], "applic": [2, 3, 4], "law": [2, 3, 4], "agre": [2, 3, 4], "write": [2, 3, 4, 6], "softwar": [2, 3, 4], "distribut": [2, 3, 4], "AS": [2, 3, 4], "basi": [2, 3, 4], "without": [2, 3, 4], "warranti": [2, 3, 4], "OR": [2, 3, 4], "condit": [2, 3, 4], "OF": [2, 3, 4], "ani": [2, 3, 4, 11], "kind": [2, 3, 4], "either": [2, 3, 4], "express": [2, 3, 4], "impli": [2, 3, 4], "see": [2, 3, 4, 16], "specif": [2, 3, 4], "languag": [2, 3, 4], "govern": [2, 3, 4], "permiss": [2, 3, 4], "limit": [2, 3, 4], "each": [2, 3, 4, 6], "respons": [2, 3, 4, 15], "check": [2, 3, 4], "content": [2, 3, 4], "determin": [2, 3, 4], "suitabl": [2, 3, 4], "intend": [2, 3, 4], "latest": [2, 3, 4, 5], "stabl": [2, 3, 4, 5], "jupyt": [2, 3, 4, 5], "ti": [2, 3, 4], "gener": [2, 3, 4], "result": [2, 3, 4, 10], "given": [2, 3, 4, 9, 10], "queri": [2, 3, 4], "sourc": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "scale": [2, 3, 4], "pipelin": [2, 3, 4, 10], "broken": [2, 3, 4], "up": [2, 3, 4, 6], "sever": [2, 3, 4], "sub": [2, 3, 4], "compon": [2, 3, 4], "core": [2, 3, 4], "focu": [2, 3, 4], "purpos": [2, 3, 4], "librari": [2, 3, 7, 16], "make": [2, 3, 4], "easi": [2, 3, 4], "quickli": [2, 3, 4], "we": [2, 3, 4, 5, 13], "extend": [2, 3, 4], "friendli": [2, 3, 4], "accustom": [2, 3, 4], "leverag": [2, 3, 4], "accommod": [2, 3, 4], "In": [2, 3, 4, 5], "run": [2, 3, 4, 6, 7, 8, 11, 13], "verifi": [2, 3, 4], "movielen": [2, 3], "100k": [2, 3], "It": [2, 3, 4], "consist": [2, 3, 6], "rate": [2, 3], "movi": [2, 3], "along": [2, 3], "metadata": [2, 3], "base": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "proce": [2, 3], "note": [2, 3, 4, 5], "step": [2, 3, 4, 5], "taken": 2, "appli": [2, 3, 4, 7, 8, 10], "set": [2, 3, 4, 7, 8, 10, 12, 14], "tutori": [2, 3], "our": [2, 3, 4, 16], "u": [2, 3], "abl": [2, 3], "do": [2, 3, 4], "so": [2, 3, 4, 5, 13], "begin": [2, 3, 4], "download": [2, 3], "breez": [2, 3], "through": [2, 3, 4], "activ": [2, 3], "below": [2, 3, 4], "would": [2, 3], "consult": [2, 3], "o": [2, 3, 4], "nvt": [2, 3], "numpi": [2, 3, 4], "tag": [2, 3, 4, 5], "bayesianpersonalizedrank": 2, "entertain": [2, 3], "get_movielen": [2, 3], "ensemble_export_path": [2, 3], "environ": [2, 3, 4], "output_data_dir": [2, 3], "use_gpu": 2, "bool": 2, "int": [2, 8, 10, 13], "1": [2, 3, 4, 5], "_": [2, 3], "variant": [2, 3], "ml": [2, 3], "henc": 2, "renam": 2, "userid": [2, 3], "op": [2, 3, 4, 6], "categorifi": [2, 3], "tagasuserid": 2, "movieid": [2, 3], "tagasitemid": 2, "train_workflow": [2, 3], "train_transform": [2, 3], "fit_transform": [2, 3], "preprocess": [2, 3, 4], "let": [2, 3, 4], "": [2, 3, 4, 9, 10], "fit": [2, 3], "usr": [2, 3, 4], "local": [2, 3, 4], "lib": [2, 3, 4], "python3": [2, 3, 4], "8": [2, 3, 4], "dist": [2, 3, 4], "packag": [2, 3, 4], "tqdm": 2, "auto": 2, "22": [2, 3], "tqdmwarn": 2, "iprogress": 2, "found": [2, 3, 4], "updat": 2, "ipywidget": 2, "readthedoc": 2, "io": [2, 5], "en": 2, "user_instal": 2, "html": 2, "autonotebook": 2, "notebook_tqdm": 2, "09": 2, "05": [2, 3], "32": 2, "07": [2, 4], "681291": 2, "stream_executor": [2, 3], "cuda": [2, 3, 4], "cuda_gpu_executor": [2, 3], "cc": [2, 3, 4], "991": [2, 3], "success": [2, 3], "numa": [2, 3], "node": [2, 3, 4, 6, 9], "read": [2, 3, 4], "sysf": [2, 3], "had": [2, 3], "neg": [2, 3], "valu": [2, 3, 4, 9, 10, 13, 14], "must": [2, 3, 4], "least": [2, 3], "one": [2, 3, 4, 5, 9], "return": [2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15], "zero": [2, 3], "681740": 2, "681877": 2, "cudf": [2, 3, 4, 7, 8], "frame": [2, 3], "384": [2, 3], "userwarn": [2, 3], "deep": [2, 3, 4], "paramet": [2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15], "ignor": [2, 3], "panda": [2, 3, 4, 7, 8], "compat": [2, 3], "warn": [2, 3], "00": [2, 3, 4], "777": 2, "52it": 2, "train_auc": 2, "85": [2, 3], "42": 2, "skip": 2, "29": [2, 3, 4], "68": 2, "now": [2, 3, 4], "perform": [2, 3, 4, 5], "incom": [2, 3, 9], "specifi": [2, 3, 4, 5], "what": [2, 3], "wa": [2, 3, 4, 5], "howev": [2, 3], "try": [2, 4, 5], "onc": [2, 3], "throughout": [2, 3], "lifecycl": [2, 3], "wai": [2, 3, 7], "redefin": [2, 3], "go": [2, 3], "custom": [2, 3, 4, 11], "written": [2, 3], "code": [2, 3, 4], "subtl": [2, 3], "ensur": [2, 3, 4], "modifi": [2, 3], "construct": [2, 3, 6], "inf_workflow": [2, 3], "equip": [2, 3], "full": [2, 3, 4], "state": [2, 3, 4], "wrap": [2, 3], "execut": [2, 3, 5, 13], "dure": [2, 3, 11, 13], "last": [2, 3, 4], "receiv": [2, 3, 4, 9, 10], "instruct": [2, 3, 4], "predictimplicit": 2, "inf_op": [2, 3], "implicit_model": 2, "With": [2, 3], "remain": [2, 3], "when": [2, 3, 4, 5, 7, 12], "readi": [2, 3, 4], "instal": [2, 3], "pytorch": [2, 3], "For": [2, 3, 4, 5], "document": [2, 3, 4, 16], "command": [2, 3, 4, 5], "argument": [2, 3, 4], "previous": [2, 3, 4], "method": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "wait": [2, 3, 4], "until": [2, 3, 4], "termin": [2, 3, 4, 5], "messag": [2, 3, 4, 5], "i0414": [2, 3, 4], "18": [2, 3, 4], "50": [2, 3, 4], "741833": [2, 3, 4], "4067": [2, 3, 4], "grpc_server": [2, 3, 4], "4421": [2, 3, 4], "grpcinferenceservic": [2, 3, 4], "8001": [2, 3, 4], "742197": [2, 3, 4], "http_server": [2, 3, 4], "3113": [2, 3, 4], "httpservic": [2, 3, 4], "8000": [2, 3, 4], "783470": [2, 3, 4], "178": [2, 3, 4], "metric": [2, 3, 4], "servic": [2, 3, 4], "8002": [2, 3, 4], "compos": [2, 3, 4], "correspond": [2, 3, 4], "analyz": [2, 3, 4], "experi": [2, 3, 4], "ten_exampl": [2, 3], "uniqu": [2, 4], "sampl": [2, 4], "sort_valu": 2, "to_fram": 2, "reset_index": 2, "drop": [2, 3], "true": [2, 4], "6": [2, 4], "15": [2, 4], "70": 2, "3": [2, 3, 4], "86": 2, "4": [2, 3, 4], "96": [2, 3], "5": [2, 3, 4], "109": 2, "143": 2, "7": [2, 3, 4], "183": 2, "609": 2, "9": [2, 4], "858": 2, "input": [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14], "convert_df_to_triton_input": [2, 3, 4], "tritoncli": [2, 3, 4, 14], "grpc": [2, 3, 4, 14], "grpcclient": [2, 3, 4, 14], "inferinput": [2, 3, 4, 14], "inferrequestedoutput": [2, 3, 4], "col": [2, 3, 4], "output_schema": [2, 3, 4, 6, 9], "inferenceservercli": [2, 3, 4], "localhost": [2, 3, 4], "client": [2, 3, 4], "executor_model": [2, 3, 4], "compar": [2, 3], "those": [2, 3, 4], "predictions_from_triton": [2, 3], "as_numpi": [2, 3, 4], "local_predict": [2, 3], "transform": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13], "test": [2, 4], "assert_allclos": 2, "manag": [2, 3], "did": [2, 3], "take": [3, 4, 9, 12, 13], "util": [3, 4], "xgb": 3, "preprocess_categori": 3, "genr": 3, "freq_threshold": [3, 4], "preprocess_r": 3, "addtag": 3, "regress": 3, "rating_binari": 3, "titl": 3, "num_boost_round": 3, "verbose_ev": 3, "08": 3, "27": [3, 4], "446602": 3, "447091": 3, "447227": 3, "zip": 3, "94mb": 3, "03": 3, "45mb": 3, "unzip": 3, "24": [3, 4], "262": 3, "32file": 3, "info": 3, "etl": 3, "39": 3, "947": 3, "diskutil": 3, "stale": 3, "lock": 3, "workspac": [3, 4, 5], "dask": 3, "worker": 3, "space": 3, "oqemvhkv": 3, "purg": 3, "preload": 3, "modul": 3, "dask_cuda": 3, "initi": [3, 6], "41": 3, "task": [3, 4], "tcp": 3, "127": [3, 5], "41809": 3, "got": 3, "new": 3, "rmse": 3, "36952": 3, "95316": 3, "40": 3, "92447": 3, "60": 3, "90741": 3, "80": 3, "89437": 3, "84": 3, "89138": 3, "fil": 3, "predictforest": 3, "head": 3, "te_movieid_r": 3, "userid_count": 3, "gender": 3, "zip_cod": 3, "ag": 3, "77": 3, "43": 3, "779876": 3, "572154": 3, "toi": 3, "stori": 3, "1995": 3, "231": 3, "13": [3, 4], "896619": 3, "goldeney": 3, "366": 3, "17": [3, 4], "954632": 3, "four": 3, "room": 3, "89": [3, 4], "093809": 3, "shorti": 3, "383": 3, "25": [3, 4], "539376": 3, "copycat": 3, "180": 3, "port": 3, "8787": [3, 5], "perhap": 3, "cluster": 3, "35647": 3, "instead": [3, 5], "28": 3, "197": 3, "assert": 3, "allclos": 3, "As": 4, "prerequisit": 4, "train": [4, 7], "readm": 4, "There": 4, "point": 4, "befor": 4, "continu": [4, 13], "work": [4, 7, 8], "access": 4, "data": [4, 5, 6, 9, 13, 14], "subsequ": 4, "doe": 4, "closer": 4, "look": [4, 5], "simpl": 4, "effortless": 4, "synthet": [4, 5], "mimick": 4, "real": 4, "ali": 4, "ccp": 4, "alibaba": 4, "click": 4, "convers": 4, "build": [4, 16], "dlrm": [4, 5], "04": 4, "ipynb": 4, "pip": 4, "tf_gpu_alloc": 4, "cuda_malloc_async": 4, "input_path": 4, "input_fold": 4, "workflow_stored_path": 4, "path": [4, 6, 11], "becaus": 4, "label_column": [4, 6, 13], "select_by_tag": 4, "0x7ff5b42c9850": 4, "subclass": 4, "definit": 4, "otherwis": 4, "cannot": [4, 9], "correctli": 4, "mm": 4, "12": 4, "23": 4, "722737": 4, "platform": 4, "cpu_feature_guard": 4, "152": 4, "binari": 4, "optim": 4, "oneapi": 4, "neural": 4, "network": 4, "onednn": 4, "cpu": 4, "critic": 4, "sse3": 4, "sse4": 4, "avx": 4, "enabl": 4, "rebuild": 4, "appropri": 4, "compil": 4, "flag": 4, "872447": 4, "common_runtim": 4, "gpu_process_st": 4, "214": 4, "malloc": 4, "async": 4, "alloc": 4, "872791": 4, "gpu_devic": 4, "1525": 4, "devic": 4, "job": 4, "replica": 4, "16255": 4, "mb": 4, "memori": 4, "tesla": 4, "v100": 4, "sxm2": 4, "32gb": 4, "l": 4, "pci": 4, "bu": 4, "id": [4, 10], "0000": 4, "capabl": 4, "313679": 4, "w": 4, "368": 4, "consid": 4, "sequenc": 4, "chang": 4, "futur": 4, "avoid": 4, "goal": 4, "illustr": 4, "meet": 4, "busi": 4, "logic": [4, 9], "two": 4, "These": [4, 5], "known": 4, "meant": 4, "abstract": 4, "awai": 4, "hard": 4, "part": 4, "block": 4, "config": 4, "know": 4, "someth": 4, "similar": [4, 5], "give": 4, "serving_oper": 4, "consum": 4, "class": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "interpret": 4, "correct": [4, 9], "cell": 4, "ll": 4, "suppli": [4, 9, 11], "repres": [4, 6, 7, 8, 9, 13], "entir": [4, 6], "is_list": 4, "is_rag": 4, "properti": [4, 6, 9, 10, 12, 13], "num_bucket": 4, "max_siz": 4, "start_index": 4, "cat_path": 4, "domain": 4, "min": 4, "max": [4, 10, 13], "embedding_s": 4, "cardin": 4, "dimens": 4, "categor": [4, 13], "int64": 4, "fals": [4, 9], "none": [4, 6, 7, 8, 9, 10, 11, 12, 13], "categori": 4, "parquet": [4, 5], "755": 4, "65": 4, "item_id": 4, "772": 4, "66": 4, "item_categori": 4, "item_shop": 4, "item_brand": 4, "user_shop": 4, "user_profil": 4, "67": 4, "user_group": 4, "16": 4, "user_gend": 4, "user_ag": 4, "user_consumption_2": 4, "11": 4, "user_is_occupi": 4, "user_geographi": 4, "user_intent": 4, "14": 4, "user_brand": 4, "user_categori": 4, "ens_conf": 4, "node_conf": 4, "displai": 4, "structur": 4, "number": [4, 8, 10], "identifi": [4, 5, 13], "1_transformworkflow": 4, "2_predicttensorflow": 4, "insid": 4, "pbtxt": 4, "indic": 4, "folder": [4, 5], "vari": 4, "depend": [4, 9, 10, 12], "seedir": 4, "satisfi": 4, "natsort": 4, "emoji": 4, "sd": 4, "style": 4, "line": [4, 5], "itemlimit": 4, "depthlimit": 4, "exclude_fold": 4, "ipynb_checkpoint": 4, "0_transformworkflow": 4, "__pycache__": 4, "1_predicttensorflow": 4, "savedmodel": 4, "ensemble_model": 4, "backend": [4, 7], "connect": 4, "triton_cli": 4, "url": [4, 5], "verbos": 4, "print": 4, "e": 4, "channel": 4, "creation": [4, 11], "fail": 4, "str": [4, 6, 7, 8, 9, 13, 14, 15], "commun": 4, "good": 4, "is_server_l": 4, "get_model_repository_index": 4, "v2": 4, "health": 4, "live": 4, "header": 4, "httpsocketpoolrespons": 4, "statu": 4, "200": 4, "length": [4, 14], "type": [4, 6, 7, 8, 9, 11, 13, 14, 15], "text": 4, "plain": 4, "post": 4, "index": 4, "json": 4, "179": 4, "bytearrai": 4, "b": 4, "origin": 4, "valid": 4, "here": 4, "df_lib": 4, "dispatch": 4, "get_lib": 4, "original_data_path": 4, "batch": [4, 13, 14, 16], "read_parquet": 4, "num_row": 4, "__null_dask_index__": 4, "700000": 4, "55": 4, "19": 4, "1305": 4, "450": 4, "2981": 4, "863": 4, "1482": 4, "156": 4, "700001": 4, "53": 4, "33": 4, "2283": 4, "787": 4, "2871": 4, "831": 4, "1427": 4, "150": 4, "700002": 4, "1631": 4, "562": 4, "497": 4, "144": 4, "247": 4, "26": 4, "isol": 4, "convert": [4, 14, 15], "datafram": [4, 6, 7, 8, 9, 10, 14, 15], "represent": [4, 9], "declar": 4, "output_col": 4, "earlier": 4, "request_id": 4, "complet": [4, 5, 9], "pars": 4, "desir": 4, "individu": 4, "back": 4, "shape": 4, "binary_classification_task": 4, "49801633": 4, "49624982": 4, "49931964": 4, "saw": 4, "put": 4, "final": 4, "sent": 4, "docker": 5, "from": [5, 6], "haven": 5, "t": 5, "volum": 5, "share": 5, "dataset": 5, "between": 5, "should": 5, "thei": [5, 7], "mount": 5, "pull": 5, "start": [5, 16], "rm": 5, "p": 5, "8888": 5, "8797": 5, "8796": 5, "8786": 5, "ipc": 5, "v": 5, "nvcr": 5, "nightli": 5, "bin": 5, "bash": 5, "releas": 5, "page": 5, "shell": 5, "prompt": 5, "root": [5, 9], "2efa5b50b909": 5, "jupyterlab": 5, "lab": 5, "allow": 5, "ip": 5, "Or": 5, "past": 5, "token": 5, "9b537d1fda9e4e9cadc673ba2a472e247deee69a6229ff8d": 5, "browser": 5, "log": 5, "navig": 5, "object": [6, 9, 11], "sequenti": 6, "__init__": [6, 7, 8, 9, 10, 11, 12, 13], "inferencenod": 6, "chain": 6, "option": [6, 7, 8, 9, 10, 11, 12, 13, 14], "string": [6, 10, 11, 13], "default": [6, 9, 10, 11, 13, 14], "attribut": [6, 7, 8, 9, 10, 11, 12, 13], "runtim": 6, "deleg": 6, "executor": 6, "necessari": [6, 9], "graph": [6, 9], "travers": 6, "mutat": 6, "accord": 6, "tensort": [6, 7, 8, 9], "classmethod": [6, 11], "kwarg": [6, 8, 11], "configur": 6, "design": 6, "fil_param": 7, "inferenceoper": [7, 8, 9, 10, 11, 12, 13], "forest": 7, "gradient": 7, "boost": 7, "decis": 7, "tree": 7, "gbdt": 7, "rf": 7, "while": 7, "algorithm": 7, "differ": 7, "produc": 7, "instanti": [7, 8, 9, 11], "A": [7, 8, 9, 14, 15], "support": 7, "xgboost": 7, "lightgbm": 7, "scikit": 7, "learn": [7, 16], "pass": [7, 9], "compute_output_schema": [7, 8, 9, 10, 11, 12, 13], "col_selector": [7, 8, 9, 10, 11, 12, 13], "columnselector": [7, 8, 9, 10, 11, 12, 13], "prev_output_schema": [7, 8, 9, 10, 11, 12, 13], "compute_input_schema": [7, 8, 9, 10, 11], "root_schema": [7, 8, 9, 10, 11], "parents_schema": [7, 8, 9, 10, 11], "deps_schema": [7, 8, 9, 10, 11], "selector": [7, 8, 9, 10, 11], "df": [7, 8, 9], "num_to_recommend": 8, "load_artifact": 8, "artifact_path": 8, "save_artifact": 8, "input_col": 9, "criteria": 9, "_summary_": 9, "param": 9, "parent": 9, "ancestor": 9, "subset": 9, "its": 9, "rais": 9, "valueerror": 9, "than": 9, "previou": 9, "validate_schema": 9, "strict_dtyp": 9, "tensor": 9, "dictionari": [9, 13], "manipul": 9, "_input_col": 10, "descend": 10, "judg": 10, "float": 10, "effect": 10, "weight": 10, "wish": 10, "_type_": 10, "whose": 10, "describ": 10, "model_or_path": 11, "custom_object": 11, "dict": [11, 13], "unus": [11, 13], "columunselector": [11, 13], "from_path": 11, "item_id_col": 12, "unroll_col": 12, "unrol": 12, "broadcast": 12, "seri": 12, "sparse_max": 13, "max_batch_s": 13, "cat": 13, "cont": 13, "turn": 13, "kei": 13, "val": 13, "pair": 13, "sparsiti": 13, "maximum": 13, "size": 13, "nvt_model_nam": 13, "set_nvt_model_nam": 13, "input_class": 14, "_infer_input": 14, "itself": [14, 15], "offset": 14, "facil": 16, "simplifi": 16, "recommend": 16, "introduct": 16, "overarch": 16, "project": 16, "bring": 16, "togeth": 16, "websit": 16}, "objects": {"merlin.systems.dag": [[6, 0, 1, "", "Ensemble"]], "merlin.systems.dag.Ensemble": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "export"], [6, 2, 1, "", "input_schema"], [6, 1, 1, "", "load"], [6, 2, 1, "", "output_schema"], [6, 1, 1, "", "save"], [6, 1, 1, "", "transform"]], "merlin.systems.dag.ops.fil": [[7, 0, 1, "", "PredictForest"]], "merlin.systems.dag.ops.fil.PredictForest": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "compute_input_schema"], [7, 1, 1, "", "compute_output_schema"], [7, 1, 1, "", "transform"]], "merlin.systems.dag.ops.implicit": [[8, 0, 1, "", "PredictImplicit"]], "merlin.systems.dag.ops.implicit.PredictImplicit": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "compute_input_schema"], [8, 1, 1, "", "compute_output_schema"], [8, 1, 1, "", "load_artifacts"], [8, 1, 1, "", "save_artifacts"], [8, 1, 1, "", "transform"]], "merlin.systems.dag.ops.session_filter": [[9, 0, 1, "", "FilterCandidates"]], "merlin.systems.dag.ops.session_filter.FilterCandidates": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "compute_input_schema"], [9, 1, 1, "", "compute_output_schema"], [9, 2, 1, "", "dependencies"], [9, 1, 1, "", "transform"], [9, 1, 1, "", "validate_schemas"]], "merlin.systems.dag.ops.softmax_sampling": [[10, 0, 1, "", "SoftmaxSampling"]], "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "compute_input_schema"], [10, 1, 1, "", "compute_output_schema"], [10, 2, 1, "", "dependencies"], [10, 1, 1, "", "transform"]], "merlin.systems.dag.ops.tensorflow": [[11, 0, 1, "", "PredictTensorflow"]], "merlin.systems.dag.ops.tensorflow.PredictTensorflow": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "compute_input_schema"], [11, 1, 1, "", "compute_output_schema"], [11, 1, 1, "", "from_path"], [11, 1, 1, "", "transform"]], "merlin.systems.dag.ops.unroll_features": [[12, 0, 1, "", "UnrollFeatures"]], "merlin.systems.dag.ops.unroll_features.UnrollFeatures": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "compute_output_schema"], [12, 2, 1, "", "dependencies"], [12, 1, 1, "", "transform"]], "merlin.systems.dag.ops.workflow": [[13, 0, 1, "", "TransformWorkflow"]], "merlin.systems.dag.ops.workflow.TransformWorkflow": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "compute_output_schema"], [13, 2, 1, "", "nvt_model_name"], [13, 1, 1, "", "set_nvt_model_name"], [13, 1, 1, "", "transform"]], "merlin.systems.triton": [[14, 3, 1, "", "convert_df_to_triton_input"], [15, 3, 1, "", "convert_triton_output_to_df"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "titleterms": {"merlin": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "system": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "quickstart": 0, "build": 0, "four": 0, "stage": 0, "recommend": [0, 2, 3, 4], "pipelin": 0, "instal": [0, 4], "us": 0, "pip": 0, "from": [0, 2, 3, 4], "sourc": 0, "run": [0, 5], "docker": 0, "feedback": 0, "support": 0, "api": 1, "document": 1, "ensembl": [1, 2, 3, 4, 6], "graph": [1, 2, 3, 4], "constructor": 1, "oper": 1, "convers": 1, "function": 1, "triton": [1, 2, 3, 4, 14, 15], "infer": [1, 2, 3, 4], "server": [1, 2, 3, 4], "serv": [2, 3, 4], "an": [2, 3, 4], "implicit": [2, 8], "model": [2, 3, 4], "overview": [2, 3, 4], "learn": [2, 3, 4], "object": [2, 3, 4], "dataset": [2, 3, 4], "tool": [2, 3, 4], "prerequisit": [2, 3], "prepar": [2, 3], "data": [2, 3], "train": [2, 3], "creat": [2, 3, 4], "start": [2, 3, 4], "retriev": [2, 3, 4], "xgboost": 3, "rank": 4, "With": 4, "requir": 4, "librari": 4, "load": 4, "nvtabular": 4, "workflow": [4, 13], "tensorflow": [4, 11], "export": 4, "verif": 4, "artifact": 4, "summari": 4, "exampl": 5, "notebook": 5, "dag": [6, 7, 8, 9, 10, 11, 12, 13], "op": [7, 8, 9, 10, 11, 12, 13], "fil": 7, "predictforest": 7, "predictimplicit": 8, "session_filt": 9, "filtercandid": 9, "softmax_sampl": 10, "softmaxsampl": 10, "predicttensorflow": 11, "unroll_featur": 12, "unrollfeatur": 12, "transformworkflow": 13, "convert_df_to_triton_input": 14, "convert_triton_output_to_df": 15, "relat": 16, "resourc": 16, "index": 16}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Merlin Systems": [[0, "merlin-systems"], [16, "merlin-systems"]], "Quickstart": [[0, "quickstart"]], "Building a Four-Stage Recommender Pipeline": [[0, "building-a-four-stage-recommender-pipeline"]], "Installation": [[0, "installation"]], "Installing Merlin Systems Using Pip": [[0, "installing-merlin-systems-using-pip"]], "Installing Merlin Systems from Source": [[0, "installing-merlin-systems-from-source"]], "Running Merlin Systems from Docker": [[0, "running-merlin-systems-from-docker"]], "Feedback and Support": [[0, "feedback-and-support"]], "API Documentation": [[1, "api-documentation"]], "Ensemble Graph Constructors": [[1, "ensemble-graph-constructors"]], "Ensemble Operator Constructors": [[1, "ensemble-operator-constructors"]], "Conversion Functions for Triton Inference Server": [[1, "conversion-functions-for-triton-inference-server"]], "Serving an Implicit Model with Merlin Systems": [[2, "serving-an-implicit-model-with-merlin-systems"]], "Overview": [[2, "overview"], [3, "overview"], [4, "overview"]], "Learning objectives": [[2, "learning-objectives"], [3, "learning-objectives"], [4, "learning-objectives"]], "Dataset": [[2, "dataset"], [3, "dataset"], [4, "dataset"]], "Tools": [[2, "tools"], [3, "tools"], [4, "tools"]], "Prerequisite: Preparing the data and Training Implicit": [[2, "prerequisite-preparing-the-data-and-training-implicit"]], "Create the Ensemble Graph": [[2, "create-the-ensemble-graph"], [3, "create-the-ensemble-graph"], [4, "create-the-ensemble-graph"]], "Starting the Triton Inference Server": [[2, "starting-the-triton-inference-server"], [3, "starting-the-triton-inference-server"]], "Retrieving Recommendations from Triton Inference Server": [[2, "retrieving-recommendations-from-triton-inference-server"], [3, "retrieving-recommendations-from-triton-inference-server"], [4, "retrieving-recommendations-from-triton-inference-server"]], "Serving an XGBoost Model with Merlin Systems": [[3, "serving-an-xgboost-model-with-merlin-systems"]], "Prerequisite: Preparing the data and Training XGBoost": [[3, "prerequisite-preparing-the-data-and-training-xgboost"]], "Serving Ranking Models With Merlin Systems": [[4, "serving-ranking-models-with-merlin-systems"]], "Install Required Libraries": [[4, "install-required-libraries"]], "Load an NVTabular Workflow": [[4, "load-an-nvtabular-workflow"]], "Load the Tensorflow Model": [[4, "load-the-tensorflow-model"]], "Export Graph as Ensemble": [[4, "export-graph-as-ensemble"]], "Verification of Ensemble Artifacts": [[4, "verification-of-ensemble-artifacts"]], "Starting Triton Inference Server": [[4, "starting-triton-inference-server"]], "Summary": [[4, "summary"]], "Merlin Systems Example Notebook": [[5, "merlin-systems-example-notebook"]], "Running the Example Notebooks": [[5, "running-the-example-notebooks"]], "merlin.systems.dag.Ensemble": [[6, "merlin-systems-dag-ensemble"]], "merlin.systems.dag.ops.fil.PredictForest": [[7, "merlin-systems-dag-ops-fil-predictforest"]], "merlin.systems.dag.ops.implicit.PredictImplicit": [[8, "merlin-systems-dag-ops-implicit-predictimplicit"]], "merlin.systems.dag.ops.session_filter.FilterCandidates": [[9, "merlin-systems-dag-ops-session-filter-filtercandidates"]], "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling": [[10, "merlin-systems-dag-ops-softmax-sampling-softmaxsampling"]], "merlin.systems.dag.ops.tensorflow.PredictTensorflow": [[11, "merlin-systems-dag-ops-tensorflow-predicttensorflow"]], "merlin.systems.dag.ops.unroll_features.UnrollFeatures": [[12, "merlin-systems-dag-ops-unroll-features-unrollfeatures"]], "merlin.systems.dag.ops.workflow.TransformWorkflow": [[13, "merlin-systems-dag-ops-workflow-transformworkflow"]], "merlin.systems.triton.convert_df_to_triton_input": [[14, "merlin-systems-triton-convert-df-to-triton-input"]], "merlin.systems.triton.convert_triton_output_to_df": [[15, "merlin-systems-triton-convert-triton-output-to-df"]], "Related Resources": [[16, "related-resources"]], "Index": [[16, "index"]]}, "indexentries": {"ensemble (class in merlin.systems.dag)": [[6, "merlin.systems.dag.Ensemble"]], "__init__() (merlin.systems.dag.ensemble method)": [[6, "merlin.systems.dag.Ensemble.__init__"]], "export() (merlin.systems.dag.ensemble method)": [[6, "merlin.systems.dag.Ensemble.export"]], "input_schema (merlin.systems.dag.ensemble property)": [[6, "merlin.systems.dag.Ensemble.input_schema"]], "load() (merlin.systems.dag.ensemble class method)": [[6, "merlin.systems.dag.Ensemble.load"]], "output_schema (merlin.systems.dag.ensemble property)": [[6, "merlin.systems.dag.Ensemble.output_schema"]], "save() (merlin.systems.dag.ensemble method)": [[6, "merlin.systems.dag.Ensemble.save"]], "transform() (merlin.systems.dag.ensemble method)": [[6, "merlin.systems.dag.Ensemble.transform"]], "predictforest (class in merlin.systems.dag.ops.fil)": [[7, "merlin.systems.dag.ops.fil.PredictForest"]], "__init__() (merlin.systems.dag.ops.fil.predictforest method)": [[7, "merlin.systems.dag.ops.fil.PredictForest.__init__"]], "compute_input_schema() (merlin.systems.dag.ops.fil.predictforest method)": [[7, "merlin.systems.dag.ops.fil.PredictForest.compute_input_schema"]], "compute_output_schema() (merlin.systems.dag.ops.fil.predictforest method)": [[7, "merlin.systems.dag.ops.fil.PredictForest.compute_output_schema"]], "transform() (merlin.systems.dag.ops.fil.predictforest method)": [[7, "merlin.systems.dag.ops.fil.PredictForest.transform"]], "predictimplicit (class in merlin.systems.dag.ops.implicit)": [[8, "merlin.systems.dag.ops.implicit.PredictImplicit"]], "__init__() (merlin.systems.dag.ops.implicit.predictimplicit method)": [[8, "merlin.systems.dag.ops.implicit.PredictImplicit.__init__"]], "compute_input_schema() (merlin.systems.dag.ops.implicit.predictimplicit method)": [[8, "merlin.systems.dag.ops.implicit.PredictImplicit.compute_input_schema"]], "compute_output_schema() (merlin.systems.dag.ops.implicit.predictimplicit method)": [[8, "merlin.systems.dag.ops.implicit.PredictImplicit.compute_output_schema"]], "load_artifacts() (merlin.systems.dag.ops.implicit.predictimplicit method)": [[8, "merlin.systems.dag.ops.implicit.PredictImplicit.load_artifacts"]], "save_artifacts() (merlin.systems.dag.ops.implicit.predictimplicit method)": [[8, "merlin.systems.dag.ops.implicit.PredictImplicit.save_artifacts"]], "transform() (merlin.systems.dag.ops.implicit.predictimplicit method)": [[8, "merlin.systems.dag.ops.implicit.PredictImplicit.transform"]], "filtercandidates (class in merlin.systems.dag.ops.session_filter)": [[9, "merlin.systems.dag.ops.session_filter.FilterCandidates"]], "__init__() (merlin.systems.dag.ops.session_filter.filtercandidates method)": [[9, "merlin.systems.dag.ops.session_filter.FilterCandidates.__init__"]], "compute_input_schema() (merlin.systems.dag.ops.session_filter.filtercandidates method)": [[9, "merlin.systems.dag.ops.session_filter.FilterCandidates.compute_input_schema"]], "compute_output_schema() (merlin.systems.dag.ops.session_filter.filtercandidates method)": [[9, "merlin.systems.dag.ops.session_filter.FilterCandidates.compute_output_schema"]], "dependencies (merlin.systems.dag.ops.session_filter.filtercandidates property)": [[9, "merlin.systems.dag.ops.session_filter.FilterCandidates.dependencies"]], "transform() (merlin.systems.dag.ops.session_filter.filtercandidates method)": [[9, "merlin.systems.dag.ops.session_filter.FilterCandidates.transform"]], "validate_schemas() (merlin.systems.dag.ops.session_filter.filtercandidates method)": [[9, "merlin.systems.dag.ops.session_filter.FilterCandidates.validate_schemas"]], "softmaxsampling (class in merlin.systems.dag.ops.softmax_sampling)": [[10, "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling"]], "__init__() (merlin.systems.dag.ops.softmax_sampling.softmaxsampling method)": [[10, "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling.__init__"]], "compute_input_schema() (merlin.systems.dag.ops.softmax_sampling.softmaxsampling method)": [[10, "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling.compute_input_schema"]], "compute_output_schema() (merlin.systems.dag.ops.softmax_sampling.softmaxsampling method)": [[10, "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling.compute_output_schema"]], "dependencies (merlin.systems.dag.ops.softmax_sampling.softmaxsampling property)": [[10, "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling.dependencies"]], "transform() (merlin.systems.dag.ops.softmax_sampling.softmaxsampling method)": [[10, "merlin.systems.dag.ops.softmax_sampling.SoftmaxSampling.transform"]], "predicttensorflow (class in merlin.systems.dag.ops.tensorflow)": [[11, "merlin.systems.dag.ops.tensorflow.PredictTensorflow"]], "__init__() (merlin.systems.dag.ops.tensorflow.predicttensorflow method)": [[11, "merlin.systems.dag.ops.tensorflow.PredictTensorflow.__init__"]], "compute_input_schema() (merlin.systems.dag.ops.tensorflow.predicttensorflow method)": [[11, "merlin.systems.dag.ops.tensorflow.PredictTensorflow.compute_input_schema"]], "compute_output_schema() (merlin.systems.dag.ops.tensorflow.predicttensorflow method)": [[11, "merlin.systems.dag.ops.tensorflow.PredictTensorflow.compute_output_schema"]], "from_path() (merlin.systems.dag.ops.tensorflow.predicttensorflow class method)": [[11, "merlin.systems.dag.ops.tensorflow.PredictTensorflow.from_path"]], "transform() (merlin.systems.dag.ops.tensorflow.predicttensorflow method)": [[11, "merlin.systems.dag.ops.tensorflow.PredictTensorflow.transform"]], "unrollfeatures (class in merlin.systems.dag.ops.unroll_features)": [[12, "merlin.systems.dag.ops.unroll_features.UnrollFeatures"]], "__init__() (merlin.systems.dag.ops.unroll_features.unrollfeatures method)": [[12, "merlin.systems.dag.ops.unroll_features.UnrollFeatures.__init__"]], "compute_output_schema() (merlin.systems.dag.ops.unroll_features.unrollfeatures method)": [[12, "merlin.systems.dag.ops.unroll_features.UnrollFeatures.compute_output_schema"]], "dependencies (merlin.systems.dag.ops.unroll_features.unrollfeatures property)": [[12, "merlin.systems.dag.ops.unroll_features.UnrollFeatures.dependencies"]], "transform() (merlin.systems.dag.ops.unroll_features.unrollfeatures method)": [[12, "merlin.systems.dag.ops.unroll_features.UnrollFeatures.transform"]], "transformworkflow (class in merlin.systems.dag.ops.workflow)": [[13, "merlin.systems.dag.ops.workflow.TransformWorkflow"]], "__init__() (merlin.systems.dag.ops.workflow.transformworkflow method)": [[13, "merlin.systems.dag.ops.workflow.TransformWorkflow.__init__"]], "compute_output_schema() (merlin.systems.dag.ops.workflow.transformworkflow method)": [[13, "merlin.systems.dag.ops.workflow.TransformWorkflow.compute_output_schema"]], "nvt_model_name (merlin.systems.dag.ops.workflow.transformworkflow property)": [[13, "merlin.systems.dag.ops.workflow.TransformWorkflow.nvt_model_name"]], "set_nvt_model_name() (merlin.systems.dag.ops.workflow.transformworkflow method)": [[13, "merlin.systems.dag.ops.workflow.TransformWorkflow.set_nvt_model_name"]], "transform() (merlin.systems.dag.ops.workflow.transformworkflow method)": [[13, "merlin.systems.dag.ops.workflow.TransformWorkflow.transform"]], "convert_df_to_triton_input() (in module merlin.systems.triton)": [[14, "merlin.systems.triton.convert_df_to_triton_input"]], "convert_triton_output_to_df() (in module merlin.systems.triton)": [[15, "merlin.systems.triton.convert_triton_output_to_df"]]}})